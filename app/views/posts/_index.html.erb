<turbo-frame id="main-content">
  <%= turbo_frame_tag 'post_edit_modal' %>
  <%= turbo_frame_tag "profile_edit_modal" %>
  <%= turbo_frame_tag 'profile_modal' %>
  <%= turbo_frame_tag 'reply_modal' %>

  <div class="flex justify-center min-h-screen">
    <div class="max-w-[670px] w-full bg-white border-x">
      <% unless logged_in? %>
        <div class="flex justify-center my-4">
          <%= link_to 'このアプリについて', "#{about_path}#about", data: { turbo_frame: "_top" }, class: 'btn btn-outline btn-info btn-base sm:btn-lg rounded-full transition-colors duration-300' %>
        </div>
      <% end %>

      <!-- 検索フォーム -->
      <div class="hidden px-2 mx-auto">
        <form class="mb-3">
          <div class="flex">
            <input class="w-full px-4 py-2 mr-2 text-gray-700 bg-gray-200 rounded-lg focus:outline-none focus:bg-white" type="search" placeholder="検索ワード">
            <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">検索</button>
          </div>
        </form>
      </div>

        <!-- タブメニュー -->
      <%= render 'posts/index/category_tabs' %>
      <%= turbo_frame_tag "open-posts" do %>
        <!-- 投稿一覧 -->
        <%= render 'posts/posts_list', posts: posts, pagy: pagy, notifications: notifications %>
      <% end %>
    </div>
  </div>

  <script>
    // ナビバーの透明度を調整する関数
    function handleNavbarOpacity() {
      var navbar = document.getElementById('bottom-navbar');
      if (!navbar) return; // navbarが存在しない場合は何もしない

      var lastScrollTop = 0;

      window.addEventListener('scroll', function () {
        var scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        if (scrollTop > lastScrollTop) {
          navbar.style.opacity = '0.5';
        } else {
          navbar.style.opacity = '1';
        }
        lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
      });
    }

    // カテゴリータブを固定する関数
    function handleCategoryTabs() {
      var categoryTabsWrapper = document.getElementById('post-category-tabs-wrapper');
      var categoryTabs = document.getElementById('post-category-tabs');

      if (categoryTabsWrapper && categoryTabs) {
        var categoryTabsOffsetTop = categoryTabsWrapper.offsetTop;

        window.addEventListener('scroll', function () {
          if (window.pageYOffset > categoryTabsOffsetTop) {
            categoryTabsWrapper.style.height = categoryTabs.offsetHeight + 'px';
            categoryTabs.classList.add('fixed', 'top-0', 'left-0', 'w-full', 'bg-white', 'shadow-md', 'z-10');
          } else {
            categoryTabsWrapper.style.height = 'auto';
            categoryTabs.classList.remove('fixed', 'top-0', 'left-0', 'w-full', 'bg-white', 'shadow-md', 'z-10');
          }
        });
      }
    }

    // タブの状態とスクロール位置を保存する関数
    function saveTabState(category) {
      var container = document.getElementById('post-category-tabs-container');
      if (container) {
        localStorage.setItem('tabScrollPosition', container.scrollLeft);
      }
      localStorage.setItem('selectedCategory', category);
    }

    // タブをクリックした際に他のタブのアクティブクラスを解除する関数
    function handleTabClick(event) {
      var tabs = document.querySelectorAll('.c-post-tab');
      tabs.forEach(function(tab) {
        tab.classList.remove('active');
      });
      event.currentTarget.classList.add('active');
    }

    // ページ初期化関数
    function initializePage() {
      handleNavbarOpacity();
      handleCategoryTabs();

      var tabs = document.querySelectorAll('.c-post-tab');
      tabs.forEach(function(tab) {
        tab.addEventListener('click', handleTabClick);
      });
    }

    document.addEventListener('DOMContentLoaded', initializePage);
    document.addEventListener('turbo:load', initializePage);
    document.addEventListener('turbo:frame-load', function(event) {
      if (event.target.id === 'open-posts') {
        initializePage();
      }
    });
  </script>
</turbo-frame>
