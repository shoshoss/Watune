<div id="error_messages"></div>
<div class="bg-white p-4 z-50 border-t-2 border-gray-200">
  <div class="card-body p-2">
    <%= render 'shared/error_messages', object: f.object %>
    <div class="form-control pt-2">
      <%= f.label :body, '返信内容', class: "block text-lg font-semibold", for: "body" %>
      <%= f.text_area :body, id: 'body', class: "block mt-1 p-2 text-base border-2 border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-sky-500 resize-none overflow-y-auto", rows: "3" %>
    </div>

    <section class="sound-clips">
      <!-- 音声クリップはここに表示 -->
    </section>

    <%= f.file_field :audio, direct_upload: true, class: "hidden" %>
    <%= f.hidden_field :duration, class: "duration-field" %>

    <!-- 送信先設定 -->
    <%= turbo_frame_tag "privacy-settings" do %>
      <div id="privacy-settings" class="form-control pt-2">
        <label for="post_privacy" class="block text-lg font-semibold">返信先</label>
        <div class="text-lg text-gray-500 mb-2">
          <% if post.user.present? %>
            <!-- 返信先の投稿が存在する場合 -->
            <!-- 投稿のユーザー名にリンクを設定し、プロフィールリンクを表示 -->
            <%= link_to profile_show_path(username_slug: post.user.username_slug),
                        class: "text-xl font-semibold text-blue-500 hover:underline",
                        method: :get,
                        data: { turbo_frame: "_top"} do %>
              <%= post.user.display_name %><span class="font-normal">さん</span>
            <% end %><br>

            <!-- 投稿の祖先（リプライ元）ユーザーを一意に取得し、リンクを設定 -->
            <% post.ancestors.map(&:user).uniq.each do |user| %>
              <% unless user == current_user %>
                <%= link_to profile_show_path(username_slug: user.username_slug),
                            class: "text-blue-500 hover:underline",
                            method: :get,
                            data: { turbo_frame: "_top"} do %>
                  <%= user.display_name %><span class="font-normal">さん</span>
                <% end %>
                <% unless user == post.ancestors.map(&:user).uniq.last %>、<% end %>
                <!-- 最後のユーザー以外には読点を追加 -->
              <% end %>
            <% end %>
          <% else %>
            <!-- 返信先の投稿が削除されている場合のメッセージ -->
            <span>送信先の投稿が削除されました。</span>
          <% end %>
        </div>
        <input type="hidden" name="post[privacy]" id="post_reply_privacy" value="reply">
        <!-- 返信のプライバシー設定をhiddenフィールドに設定 -->
      </div>
    <% end %>
  </div>
  <div class="form-control mt-4 lg:mt-6">
    <%= f.submit "返信する", class: "btn text-xl bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded disabled:opacity-50" %>
  </div>
</div>

<script>
  document.addEventListener('input', function(event) {
    if (event.target.tagName.toLowerCase() !== 'textarea') return;

    const textarea = event.target;
    const maxPCHeight = 500; // PCの最大高さ
    const maxMobileHeight = 200; // スマホの最大高さ

    // PCの場合
    if (window.innerWidth >= 640 && textarea.scrollHeight >= maxPCHeight) {
      // テキストエリアの高さを500pxに固定し、スクロール可能にする
      textarea.classList.add('overflow-y-auto');
      textarea.style.height = maxPCHeight + 'px';
    } 
    // スマホの場合
    else if (window.innerWidth < 640 && textarea.scrollHeight >= maxMobileHeight) {
      // テキストエリアの高さを300pxに固定し、スクロール可能にする
      textarea.classList.add('overflow-y-auto');
      textarea.style.height = maxMobileHeight + 'px';
    } 
    // 高さが制限を超えない場合
    else {
      textarea.classList.remove('overflow-y-auto');
      // テキストエリアの高さを調整
      textarea.style.height = 'auto';
      textarea.style.height = textarea.scrollHeight + 'px';
    }
  });
</script>
